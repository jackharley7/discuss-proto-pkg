// Code generated by protoc-gen-go. DO NOT EDIT.
// source: upvote.proto

package discussproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UpvoteType int32

const (
	UpvoteType_NONE UpvoteType = 0
	UpvoteType_UP   UpvoteType = 1
	UpvoteType_DOWN UpvoteType = 2
)

var UpvoteType_name = map[int32]string{
	0: "NONE",
	1: "UP",
	2: "DOWN",
}

var UpvoteType_value = map[string]int32{
	"NONE": 0,
	"UP":   1,
	"DOWN": 2,
}

func (x UpvoteType) String() string {
	return proto.EnumName(UpvoteType_name, int32(x))
}

func (UpvoteType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_02ef8f9a95b405c4, []int{0}
}

type Upvote struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ItemId               int64      `protobuf:"varint,2,opt,name=itemId,proto3" json:"itemId,omitempty"`
	Category             string     `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	UserId               int64      `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`
	Type                 UpvoteType `protobuf:"varint,5,opt,name=type,proto3,enum=discussproto.UpvoteType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Upvote) Reset()         { *m = Upvote{} }
func (m *Upvote) String() string { return proto.CompactTextString(m) }
func (*Upvote) ProtoMessage()    {}
func (*Upvote) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ef8f9a95b405c4, []int{0}
}

func (m *Upvote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Upvote.Unmarshal(m, b)
}
func (m *Upvote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Upvote.Marshal(b, m, deterministic)
}
func (m *Upvote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Upvote.Merge(m, src)
}
func (m *Upvote) XXX_Size() int {
	return xxx_messageInfo_Upvote.Size(m)
}
func (m *Upvote) XXX_DiscardUnknown() {
	xxx_messageInfo_Upvote.DiscardUnknown(m)
}

var xxx_messageInfo_Upvote proto.InternalMessageInfo

func (m *Upvote) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Upvote) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *Upvote) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Upvote) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Upvote) GetType() UpvoteType {
	if m != nil {
		return m.Type
	}
	return UpvoteType_NONE
}

type UpvoteCheck struct {
	ItemId               string     `protobuf:"bytes,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	Type                 UpvoteType `protobuf:"varint,2,opt,name=type,proto3,enum=discussproto.UpvoteType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpvoteCheck) Reset()         { *m = UpvoteCheck{} }
func (m *UpvoteCheck) String() string { return proto.CompactTextString(m) }
func (*UpvoteCheck) ProtoMessage()    {}
func (*UpvoteCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ef8f9a95b405c4, []int{1}
}

func (m *UpvoteCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpvoteCheck.Unmarshal(m, b)
}
func (m *UpvoteCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpvoteCheck.Marshal(b, m, deterministic)
}
func (m *UpvoteCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpvoteCheck.Merge(m, src)
}
func (m *UpvoteCheck) XXX_Size() int {
	return xxx_messageInfo_UpvoteCheck.Size(m)
}
func (m *UpvoteCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_UpvoteCheck.DiscardUnknown(m)
}

var xxx_messageInfo_UpvoteCheck proto.InternalMessageInfo

func (m *UpvoteCheck) GetItemId() string {
	if m != nil {
		return m.ItemId
	}
	return ""
}

func (m *UpvoteCheck) GetType() UpvoteType {
	if m != nil {
		return m.Type
	}
	return UpvoteType_NONE
}

type UpvoteRequest struct {
	ItemId               int64    `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	Category             string   `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpvoteRequest) Reset()         { *m = UpvoteRequest{} }
func (m *UpvoteRequest) String() string { return proto.CompactTextString(m) }
func (*UpvoteRequest) ProtoMessage()    {}
func (*UpvoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ef8f9a95b405c4, []int{2}
}

func (m *UpvoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpvoteRequest.Unmarshal(m, b)
}
func (m *UpvoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpvoteRequest.Marshal(b, m, deterministic)
}
func (m *UpvoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpvoteRequest.Merge(m, src)
}
func (m *UpvoteRequest) XXX_Size() int {
	return xxx_messageInfo_UpvoteRequest.Size(m)
}
func (m *UpvoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpvoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpvoteRequest proto.InternalMessageInfo

func (m *UpvoteRequest) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *UpvoteRequest) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

type UpvoteResponse struct {
	Done                 bool     `protobuf:"varint,1,opt,name=done,proto3" json:"done,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpvoteResponse) Reset()         { *m = UpvoteResponse{} }
func (m *UpvoteResponse) String() string { return proto.CompactTextString(m) }
func (*UpvoteResponse) ProtoMessage()    {}
func (*UpvoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ef8f9a95b405c4, []int{3}
}

func (m *UpvoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpvoteResponse.Unmarshal(m, b)
}
func (m *UpvoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpvoteResponse.Marshal(b, m, deterministic)
}
func (m *UpvoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpvoteResponse.Merge(m, src)
}
func (m *UpvoteResponse) XXX_Size() int {
	return xxx_messageInfo_UpvoteResponse.Size(m)
}
func (m *UpvoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpvoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpvoteResponse proto.InternalMessageInfo

func (m *UpvoteResponse) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

type DownvoteRequest struct {
	ItemId               int64    `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	Category             string   `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownvoteRequest) Reset()         { *m = DownvoteRequest{} }
func (m *DownvoteRequest) String() string { return proto.CompactTextString(m) }
func (*DownvoteRequest) ProtoMessage()    {}
func (*DownvoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ef8f9a95b405c4, []int{4}
}

func (m *DownvoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownvoteRequest.Unmarshal(m, b)
}
func (m *DownvoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownvoteRequest.Marshal(b, m, deterministic)
}
func (m *DownvoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownvoteRequest.Merge(m, src)
}
func (m *DownvoteRequest) XXX_Size() int {
	return xxx_messageInfo_DownvoteRequest.Size(m)
}
func (m *DownvoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DownvoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DownvoteRequest proto.InternalMessageInfo

func (m *DownvoteRequest) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *DownvoteRequest) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

type DownvoteResponse struct {
	Done                 bool     `protobuf:"varint,1,opt,name=done,proto3" json:"done,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownvoteResponse) Reset()         { *m = DownvoteResponse{} }
func (m *DownvoteResponse) String() string { return proto.CompactTextString(m) }
func (*DownvoteResponse) ProtoMessage()    {}
func (*DownvoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ef8f9a95b405c4, []int{5}
}

func (m *DownvoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownvoteResponse.Unmarshal(m, b)
}
func (m *DownvoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownvoteResponse.Marshal(b, m, deterministic)
}
func (m *DownvoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownvoteResponse.Merge(m, src)
}
func (m *DownvoteResponse) XXX_Size() int {
	return xxx_messageInfo_DownvoteResponse.Size(m)
}
func (m *DownvoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DownvoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DownvoteResponse proto.InternalMessageInfo

func (m *DownvoteResponse) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

type RemoveVoteRequest struct {
	ItemId               int64    `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	Category             string   `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveVoteRequest) Reset()         { *m = RemoveVoteRequest{} }
func (m *RemoveVoteRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveVoteRequest) ProtoMessage()    {}
func (*RemoveVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ef8f9a95b405c4, []int{6}
}

func (m *RemoveVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveVoteRequest.Unmarshal(m, b)
}
func (m *RemoveVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveVoteRequest.Marshal(b, m, deterministic)
}
func (m *RemoveVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveVoteRequest.Merge(m, src)
}
func (m *RemoveVoteRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveVoteRequest.Size(m)
}
func (m *RemoveVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveVoteRequest proto.InternalMessageInfo

func (m *RemoveVoteRequest) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *RemoveVoteRequest) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

type RemoveVoteResponse struct {
	Done                 bool     `protobuf:"varint,1,opt,name=done,proto3" json:"done,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveVoteResponse) Reset()         { *m = RemoveVoteResponse{} }
func (m *RemoveVoteResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveVoteResponse) ProtoMessage()    {}
func (*RemoveVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ef8f9a95b405c4, []int{7}
}

func (m *RemoveVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveVoteResponse.Unmarshal(m, b)
}
func (m *RemoveVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveVoteResponse.Marshal(b, m, deterministic)
}
func (m *RemoveVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveVoteResponse.Merge(m, src)
}
func (m *RemoveVoteResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveVoteResponse.Size(m)
}
func (m *RemoveVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveVoteResponse proto.InternalMessageInfo

func (m *RemoveVoteResponse) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

type CheckUserVotesRequest struct {
	Category             string   `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	ItemIds              string   `protobuf:"bytes,2,opt,name=itemIds,proto3" json:"itemIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckUserVotesRequest) Reset()         { *m = CheckUserVotesRequest{} }
func (m *CheckUserVotesRequest) String() string { return proto.CompactTextString(m) }
func (*CheckUserVotesRequest) ProtoMessage()    {}
func (*CheckUserVotesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ef8f9a95b405c4, []int{8}
}

func (m *CheckUserVotesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUserVotesRequest.Unmarshal(m, b)
}
func (m *CheckUserVotesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUserVotesRequest.Marshal(b, m, deterministic)
}
func (m *CheckUserVotesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUserVotesRequest.Merge(m, src)
}
func (m *CheckUserVotesRequest) XXX_Size() int {
	return xxx_messageInfo_CheckUserVotesRequest.Size(m)
}
func (m *CheckUserVotesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUserVotesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUserVotesRequest proto.InternalMessageInfo

func (m *CheckUserVotesRequest) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *CheckUserVotesRequest) GetItemIds() string {
	if m != nil {
		return m.ItemIds
	}
	return ""
}

type CheckUserVotesResponse struct {
	Category             string         `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	ItemIds              string         `protobuf:"bytes,2,opt,name=itemIds,proto3" json:"itemIds,omitempty"`
	Votes                []*UpvoteCheck `protobuf:"bytes,3,rep,name=votes,proto3" json:"votes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CheckUserVotesResponse) Reset()         { *m = CheckUserVotesResponse{} }
func (m *CheckUserVotesResponse) String() string { return proto.CompactTextString(m) }
func (*CheckUserVotesResponse) ProtoMessage()    {}
func (*CheckUserVotesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ef8f9a95b405c4, []int{9}
}

func (m *CheckUserVotesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUserVotesResponse.Unmarshal(m, b)
}
func (m *CheckUserVotesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUserVotesResponse.Marshal(b, m, deterministic)
}
func (m *CheckUserVotesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUserVotesResponse.Merge(m, src)
}
func (m *CheckUserVotesResponse) XXX_Size() int {
	return xxx_messageInfo_CheckUserVotesResponse.Size(m)
}
func (m *CheckUserVotesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUserVotesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUserVotesResponse proto.InternalMessageInfo

func (m *CheckUserVotesResponse) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *CheckUserVotesResponse) GetItemIds() string {
	if m != nil {
		return m.ItemIds
	}
	return ""
}

func (m *CheckUserVotesResponse) GetVotes() []*UpvoteCheck {
	if m != nil {
		return m.Votes
	}
	return nil
}

func init() {
	proto.RegisterEnum("discussproto.UpvoteType", UpvoteType_name, UpvoteType_value)
	proto.RegisterType((*Upvote)(nil), "discussproto.Upvote")
	proto.RegisterType((*UpvoteCheck)(nil), "discussproto.UpvoteCheck")
	proto.RegisterType((*UpvoteRequest)(nil), "discussproto.UpvoteRequest")
	proto.RegisterType((*UpvoteResponse)(nil), "discussproto.UpvoteResponse")
	proto.RegisterType((*DownvoteRequest)(nil), "discussproto.DownvoteRequest")
	proto.RegisterType((*DownvoteResponse)(nil), "discussproto.DownvoteResponse")
	proto.RegisterType((*RemoveVoteRequest)(nil), "discussproto.RemoveVoteRequest")
	proto.RegisterType((*RemoveVoteResponse)(nil), "discussproto.RemoveVoteResponse")
	proto.RegisterType((*CheckUserVotesRequest)(nil), "discussproto.CheckUserVotesRequest")
	proto.RegisterType((*CheckUserVotesResponse)(nil), "discussproto.CheckUserVotesResponse")
}

func init() { proto.RegisterFile("upvote.proto", fileDescriptor_02ef8f9a95b405c4) }

var fileDescriptor_02ef8f9a95b405c4 = []byte{
	// 559 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0x61, 0x6b, 0xd3, 0x40,
	0x18, 0xc7, 0x4d, 0xda, 0xd5, 0xfa, 0x6c, 0xd6, 0x7a, 0xe0, 0x88, 0x71, 0x6a, 0xc8, 0xa6, 0x84,
	0xda, 0x25, 0x50, 0xc5, 0x0f, 0xe0, 0x36, 0x64, 0x2f, 0xec, 0x24, 0xb3, 0x0a, 0xbe, 0xcb, 0x92,
	0x23, 0x3b, 0xb6, 0xe6, 0x62, 0xee, 0xd2, 0x52, 0xe6, 0x18, 0x08, 0xbe, 0x16, 0xf4, 0xa3, 0xf9,
	0x15, 0xfc, 0x20, 0x92, 0xbb, 0xa4, 0x6d, 0x6a, 0x56, 0x8a, 0x7b, 0xd5, 0x3c, 0x77, 0xcf, 0xfd,
	0x7f, 0xff, 0x27, 0xfd, 0xe7, 0x60, 0x23, 0x8d, 0x47, 0x94, 0x63, 0x3b, 0x4e, 0x28, 0xa7, 0x68,
	0x23, 0x20, 0xcc, 0x4f, 0x19, 0x13, 0x95, 0xbe, 0x15, 0x52, 0x1a, 0x9e, 0x63, 0xc7, 0x8b, 0x89,
	0xe3, 0x45, 0x11, 0xe5, 0x1e, 0x27, 0x34, 0x62, 0xb2, 0x57, 0x7f, 0x1d, 0x12, 0x7e, 0x9a, 0x9e,
	0xd8, 0x3e, 0x1d, 0x3a, 0xc3, 0x31, 0xe1, 0x67, 0x74, 0xec, 0x84, 0x74, 0x57, 0x6c, 0xee, 0x8e,
	0xbc, 0x73, 0x12, 0x78, 0x9c, 0x26, 0xcc, 0x99, 0x3e, 0xca, 0x73, 0xe6, 0x4f, 0x05, 0x1a, 0x03,
	0x01, 0x45, 0x2d, 0x50, 0x49, 0xa0, 0x29, 0x86, 0x62, 0xdd, 0x71, 0x55, 0x12, 0xa0, 0x4d, 0x68,
	0x10, 0x8e, 0x87, 0x87, 0x81, 0xa6, 0x1a, 0x8a, 0x55, 0x73, 0xf3, 0x0a, 0xe9, 0xd0, 0xf4, 0x3d,
	0x8e, 0x43, 0x9a, 0x4c, 0xb4, 0x9a, 0xe8, 0x9e, 0xd6, 0xd9, 0x99, 0x94, 0xe1, 0xe4, 0x30, 0xd0,
	0xea, 0xf2, 0x8c, 0xac, 0x50, 0x17, 0xea, 0x7c, 0x12, 0x63, 0x6d, 0xcd, 0x50, 0xac, 0x56, 0x4f,
	0xb3, 0xe7, 0x27, 0xb3, 0x25, 0xff, 0xc3, 0x24, 0xc6, 0xae, 0xe8, 0x32, 0x8f, 0x61, 0x5d, 0xae,
	0xed, 0x9d, 0x62, 0xff, 0x6c, 0xce, 0x88, 0x34, 0x57, 0x18, 0x29, 0x44, 0xd5, 0x95, 0x44, 0xf7,
	0xe0, 0xae, 0x5c, 0x73, 0xf1, 0x97, 0x14, 0x33, 0xbe, 0x20, 0x5b, 0x3d, 0x9f, 0x5a, 0x9e, 0xcf,
	0xdc, 0x81, 0x56, 0x21, 0xc2, 0x62, 0x1a, 0x31, 0x8c, 0x10, 0xd4, 0x03, 0x1a, 0x61, 0xa1, 0xd1,
	0x74, 0xc5, 0xb3, 0x79, 0x00, 0xf7, 0xf6, 0xe9, 0x38, 0xba, 0x29, 0xec, 0x39, 0xb4, 0x67, 0x32,
	0x4b, 0x70, 0x6f, 0xe1, 0xbe, 0x8b, 0x87, 0x74, 0x84, 0x3f, 0xde, 0x10, 0x68, 0x01, 0x9a, 0x17,
	0x5a, 0x82, 0x7c, 0x07, 0x0f, 0xc4, 0x7f, 0x33, 0x60, 0x38, 0xc9, 0x9a, 0x59, 0x81, 0x9d, 0x97,
	0x57, 0x16, 0xc2, 0xa1, 0xc1, 0x6d, 0x69, 0x82, 0xe5, 0xe4, 0xa2, 0x34, 0xaf, 0x60, 0x73, 0x51,
	0x2e, 0x87, 0xff, 0x97, 0x1e, 0x72, 0x60, 0x2d, 0x7b, 0x6b, 0x4c, 0xab, 0x19, 0x35, 0x6b, 0xbd,
	0xf7, 0xb0, 0x2a, 0x1a, 0x02, 0xe8, 0xca, 0xbe, 0x8e, 0x05, 0x30, 0x0b, 0x0c, 0x6a, 0x42, 0xbd,
	0x7f, 0xd4, 0x3f, 0x68, 0xdf, 0x42, 0x0d, 0x50, 0x07, 0xef, 0xdb, 0x4a, 0xb6, 0xb2, 0x7f, 0xf4,
	0xa9, 0xdf, 0x56, 0x7b, 0x3f, 0xea, 0x45, 0x8e, 0x8e, 0x71, 0x32, 0x22, 0x3e, 0x46, 0xe3, 0xe9,
	0x17, 0xf4, 0xa8, 0x8a, 0x93, 0xbf, 0x19, 0x7d, 0xab, 0x7a, 0x53, 0xce, 0x69, 0xf6, 0xbe, 0xfd,
	0xfe, 0xf3, 0x4b, 0xed, 0x9a, 0x1d, 0xf1, 0x7d, 0xcb, 0x6b, 0xc0, 0xf1, 0x3d, 0xee, 0x5c, 0x14,
	0xe3, 0x5e, 0x3a, 0x17, 0x72, 0xbc, 0xcb, 0x7c, 0x1b, 0x5d, 0x41, 0xb3, 0xc8, 0x07, 0x7a, 0x5c,
	0x56, 0x5f, 0x88, 0x9f, 0xfe, 0xe4, 0xba, 0xed, 0x1c, 0xff, 0x4a, 0xe0, 0x6d, 0xb3, 0xbb, 0x0a,
	0x3e, 0x28, 0xa0, 0x5f, 0x01, 0x66, 0x79, 0x41, 0x4f, 0xcb, 0x8c, 0x7f, 0x22, 0xa9, 0x1b, 0xd7,
	0x37, 0xe4, 0x36, 0x5e, 0x08, 0x1b, 0xcf, 0x3a, 0xdb, 0x2b, 0xd8, 0x40, 0xdf, 0x15, 0x68, 0x95,
	0x53, 0x83, 0xb6, 0xcb, 0x84, 0xca, 0x88, 0xea, 0x3b, 0xcb, 0x9b, 0x72, 0x2b, 0x96, 0xb0, 0x62,
	0x22, 0x63, 0x89, 0x15, 0x3f, 0x3b, 0xfa, 0xa6, 0xf5, 0xb9, 0x74, 0x51, 0x9f, 0x34, 0xc4, 0xcf,
	0xcb, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x91, 0x9b, 0x1a, 0xcd, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UpvoteServiceClient is the client API for UpvoteService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UpvoteServiceClient interface {
	Upvote(ctx context.Context, in *UpvoteRequest, opts ...grpc.CallOption) (*UpvoteResponse, error)
	Downvote(ctx context.Context, in *DownvoteRequest, opts ...grpc.CallOption) (*DownvoteResponse, error)
	RemoveVote(ctx context.Context, in *RemoveVoteRequest, opts ...grpc.CallOption) (*RemoveVoteResponse, error)
	CheckUserVotes(ctx context.Context, in *CheckUserVotesRequest, opts ...grpc.CallOption) (*CheckUserVotesResponse, error)
}

type upvoteServiceClient struct {
	cc *grpc.ClientConn
}

func NewUpvoteServiceClient(cc *grpc.ClientConn) UpvoteServiceClient {
	return &upvoteServiceClient{cc}
}

func (c *upvoteServiceClient) Upvote(ctx context.Context, in *UpvoteRequest, opts ...grpc.CallOption) (*UpvoteResponse, error) {
	out := new(UpvoteResponse)
	err := c.cc.Invoke(ctx, "/discussproto.UpvoteService/Upvote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *upvoteServiceClient) Downvote(ctx context.Context, in *DownvoteRequest, opts ...grpc.CallOption) (*DownvoteResponse, error) {
	out := new(DownvoteResponse)
	err := c.cc.Invoke(ctx, "/discussproto.UpvoteService/Downvote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *upvoteServiceClient) RemoveVote(ctx context.Context, in *RemoveVoteRequest, opts ...grpc.CallOption) (*RemoveVoteResponse, error) {
	out := new(RemoveVoteResponse)
	err := c.cc.Invoke(ctx, "/discussproto.UpvoteService/RemoveVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *upvoteServiceClient) CheckUserVotes(ctx context.Context, in *CheckUserVotesRequest, opts ...grpc.CallOption) (*CheckUserVotesResponse, error) {
	out := new(CheckUserVotesResponse)
	err := c.cc.Invoke(ctx, "/discussproto.UpvoteService/CheckUserVotes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UpvoteServiceServer is the server API for UpvoteService service.
type UpvoteServiceServer interface {
	Upvote(context.Context, *UpvoteRequest) (*UpvoteResponse, error)
	Downvote(context.Context, *DownvoteRequest) (*DownvoteResponse, error)
	RemoveVote(context.Context, *RemoveVoteRequest) (*RemoveVoteResponse, error)
	CheckUserVotes(context.Context, *CheckUserVotesRequest) (*CheckUserVotesResponse, error)
}

func RegisterUpvoteServiceServer(s *grpc.Server, srv UpvoteServiceServer) {
	s.RegisterService(&_UpvoteService_serviceDesc, srv)
}

func _UpvoteService_Upvote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpvoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpvoteServiceServer).Upvote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/discussproto.UpvoteService/Upvote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpvoteServiceServer).Upvote(ctx, req.(*UpvoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UpvoteService_Downvote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownvoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpvoteServiceServer).Downvote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/discussproto.UpvoteService/Downvote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpvoteServiceServer).Downvote(ctx, req.(*DownvoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UpvoteService_RemoveVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpvoteServiceServer).RemoveVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/discussproto.UpvoteService/RemoveVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpvoteServiceServer).RemoveVote(ctx, req.(*RemoveVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UpvoteService_CheckUserVotes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUserVotesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpvoteServiceServer).CheckUserVotes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/discussproto.UpvoteService/CheckUserVotes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpvoteServiceServer).CheckUserVotes(ctx, req.(*CheckUserVotesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UpvoteService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "discussproto.UpvoteService",
	HandlerType: (*UpvoteServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Upvote",
			Handler:    _UpvoteService_Upvote_Handler,
		},
		{
			MethodName: "Downvote",
			Handler:    _UpvoteService_Downvote_Handler,
		},
		{
			MethodName: "RemoveVote",
			Handler:    _UpvoteService_RemoveVote_Handler,
		},
		{
			MethodName: "CheckUserVotes",
			Handler:    _UpvoteService_CheckUserVotes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "upvote.proto",
}
