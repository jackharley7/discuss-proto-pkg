// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: comment.proto

package discussproto

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *CommentUser) Validate() error {
	return nil
}
func (this *CommentMeta) Validate() error {
	if this.User != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.User); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("User", err)
		}
	}
	return nil
}
func (this *Comment) Validate() error {
	if this.Meta != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Meta); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Meta", err)
		}
	}
	return nil
}
func (this *GetCommentsRequest) Validate() error {
	return nil
}
func (this *GetCommentsResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	return nil
}
func (this *CreateCommentRequest) Validate() error {
	if this.Comment != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Comment); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Comment", err)
		}
	}
	return nil
}
func (this *CreateCommentResponse) Validate() error {
	if this.Comment != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Comment); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Comment", err)
		}
	}
	return nil
}
