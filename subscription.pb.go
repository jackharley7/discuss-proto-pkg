// Code generated by protoc-gen-go. DO NOT EDIT.
// source: subscription.proto

package discussproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Subscription struct {
	CId                  int64    `protobuf:"varint,1,opt,name=cId,proto3" json:"cId,omitempty"`
	SeenAt               string   `protobuf:"bytes,2,opt,name=seenAt,proto3" json:"seenAt,omitempty"`
	Unseen               int32    `protobuf:"varint,3,opt,name=unseen,proto3" json:"unseen,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subscription) Reset()         { *m = Subscription{} }
func (m *Subscription) String() string { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()    {}
func (*Subscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4f8ad1a64b2bad6, []int{0}
}

func (m *Subscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscription.Unmarshal(m, b)
}
func (m *Subscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscription.Marshal(b, m, deterministic)
}
func (m *Subscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscription.Merge(m, src)
}
func (m *Subscription) XXX_Size() int {
	return xxx_messageInfo_Subscription.Size(m)
}
func (m *Subscription) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscription.DiscardUnknown(m)
}

var xxx_messageInfo_Subscription proto.InternalMessageInfo

func (m *Subscription) GetCId() int64 {
	if m != nil {
		return m.CId
	}
	return 0
}

func (m *Subscription) GetSeenAt() string {
	if m != nil {
		return m.SeenAt
	}
	return ""
}

func (m *Subscription) GetUnseen() int32 {
	if m != nil {
		return m.Unseen
	}
	return 0
}

type CreateSubscriptionRequest struct {
	CId                  int64    `protobuf:"varint,1,opt,name=cId,proto3" json:"cId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSubscriptionRequest) Reset()         { *m = CreateSubscriptionRequest{} }
func (m *CreateSubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSubscriptionRequest) ProtoMessage()    {}
func (*CreateSubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4f8ad1a64b2bad6, []int{1}
}

func (m *CreateSubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubscriptionRequest.Unmarshal(m, b)
}
func (m *CreateSubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *CreateSubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubscriptionRequest.Merge(m, src)
}
func (m *CreateSubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSubscriptionRequest.Size(m)
}
func (m *CreateSubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubscriptionRequest proto.InternalMessageInfo

func (m *CreateSubscriptionRequest) GetCId() int64 {
	if m != nil {
		return m.CId
	}
	return 0
}

type CreateSubscriptionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSubscriptionResponse) Reset()         { *m = CreateSubscriptionResponse{} }
func (m *CreateSubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*CreateSubscriptionResponse) ProtoMessage()    {}
func (*CreateSubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4f8ad1a64b2bad6, []int{2}
}

func (m *CreateSubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubscriptionResponse.Unmarshal(m, b)
}
func (m *CreateSubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubscriptionResponse.Marshal(b, m, deterministic)
}
func (m *CreateSubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubscriptionResponse.Merge(m, src)
}
func (m *CreateSubscriptionResponse) XXX_Size() int {
	return xxx_messageInfo_CreateSubscriptionResponse.Size(m)
}
func (m *CreateSubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubscriptionResponse proto.InternalMessageInfo

type RemoveSubscriptionRequest struct {
	CId                  int64    `protobuf:"varint,1,opt,name=cId,proto3" json:"cId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveSubscriptionRequest) Reset()         { *m = RemoveSubscriptionRequest{} }
func (m *RemoveSubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveSubscriptionRequest) ProtoMessage()    {}
func (*RemoveSubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4f8ad1a64b2bad6, []int{3}
}

func (m *RemoveSubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveSubscriptionRequest.Unmarshal(m, b)
}
func (m *RemoveSubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveSubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *RemoveSubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveSubscriptionRequest.Merge(m, src)
}
func (m *RemoveSubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveSubscriptionRequest.Size(m)
}
func (m *RemoveSubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveSubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveSubscriptionRequest proto.InternalMessageInfo

func (m *RemoveSubscriptionRequest) GetCId() int64 {
	if m != nil {
		return m.CId
	}
	return 0
}

type RemoveSubscriptionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveSubscriptionResponse) Reset()         { *m = RemoveSubscriptionResponse{} }
func (m *RemoveSubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveSubscriptionResponse) ProtoMessage()    {}
func (*RemoveSubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4f8ad1a64b2bad6, []int{4}
}

func (m *RemoveSubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveSubscriptionResponse.Unmarshal(m, b)
}
func (m *RemoveSubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveSubscriptionResponse.Marshal(b, m, deterministic)
}
func (m *RemoveSubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveSubscriptionResponse.Merge(m, src)
}
func (m *RemoveSubscriptionResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveSubscriptionResponse.Size(m)
}
func (m *RemoveSubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveSubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveSubscriptionResponse proto.InternalMessageInfo

type GetSubscriptionsRequest struct {
	Page                 int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit                int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSubscriptionsRequest) Reset()         { *m = GetSubscriptionsRequest{} }
func (m *GetSubscriptionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetSubscriptionsRequest) ProtoMessage()    {}
func (*GetSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4f8ad1a64b2bad6, []int{5}
}

func (m *GetSubscriptionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubscriptionsRequest.Unmarshal(m, b)
}
func (m *GetSubscriptionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubscriptionsRequest.Marshal(b, m, deterministic)
}
func (m *GetSubscriptionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubscriptionsRequest.Merge(m, src)
}
func (m *GetSubscriptionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetSubscriptionsRequest.Size(m)
}
func (m *GetSubscriptionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubscriptionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubscriptionsRequest proto.InternalMessageInfo

func (m *GetSubscriptionsRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetSubscriptionsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetSubscriptionsResponse struct {
	Data                 []*Subscription `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Page                 int32           `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit                int32           `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Count                int32           `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetSubscriptionsResponse) Reset()         { *m = GetSubscriptionsResponse{} }
func (m *GetSubscriptionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetSubscriptionsResponse) ProtoMessage()    {}
func (*GetSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4f8ad1a64b2bad6, []int{6}
}

func (m *GetSubscriptionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubscriptionsResponse.Unmarshal(m, b)
}
func (m *GetSubscriptionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubscriptionsResponse.Marshal(b, m, deterministic)
}
func (m *GetSubscriptionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubscriptionsResponse.Merge(m, src)
}
func (m *GetSubscriptionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetSubscriptionsResponse.Size(m)
}
func (m *GetSubscriptionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubscriptionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubscriptionsResponse proto.InternalMessageInfo

func (m *GetSubscriptionsResponse) GetData() []*Subscription {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetSubscriptionsResponse) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetSubscriptionsResponse) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetSubscriptionsResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*Subscription)(nil), "discussproto.Subscription")
	proto.RegisterType((*CreateSubscriptionRequest)(nil), "discussproto.CreateSubscriptionRequest")
	proto.RegisterType((*CreateSubscriptionResponse)(nil), "discussproto.CreateSubscriptionResponse")
	proto.RegisterType((*RemoveSubscriptionRequest)(nil), "discussproto.RemoveSubscriptionRequest")
	proto.RegisterType((*RemoveSubscriptionResponse)(nil), "discussproto.RemoveSubscriptionResponse")
	proto.RegisterType((*GetSubscriptionsRequest)(nil), "discussproto.GetSubscriptionsRequest")
	proto.RegisterType((*GetSubscriptionsResponse)(nil), "discussproto.GetSubscriptionsResponse")
}

func init() { proto.RegisterFile("subscription.proto", fileDescriptor_c4f8ad1a64b2bad6) }

var fileDescriptor_c4f8ad1a64b2bad6 = []byte{
	// 426 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x41, 0x6b, 0xa3, 0x40,
	0x18, 0x65, 0x62, 0x0c, 0xec, 0x6c, 0x58, 0xb2, 0x93, 0x65, 0x63, 0x24, 0xb0, 0x22, 0xec, 0xae,
	0x04, 0xa2, 0x90, 0x85, 0x3d, 0xf4, 0xd6, 0xe6, 0x50, 0x72, 0x2b, 0xe6, 0xd6, 0xdb, 0x44, 0x07,
	0x3b, 0x34, 0x3a, 0xd6, 0x19, 0x93, 0x43, 0xdb, 0x4b, 0x4f, 0xa5, 0x3d, 0xf6, 0x6f, 0xf4, 0xdf,
	0xf4, 0x2f, 0xf4, 0x87, 0x14, 0x47, 0x1b, 0x34, 0xc6, 0xa6, 0x27, 0xbf, 0xef, 0x9b, 0xe7, 0x7b,
	0xcf, 0x79, 0x9f, 0x10, 0xf1, 0x74, 0xc9, 0xbd, 0x84, 0xc6, 0x82, 0xb2, 0xc8, 0x8e, 0x13, 0x26,
	0x18, 0xea, 0xfa, 0x94, 0x7b, 0x29, 0xe7, 0xb2, 0xd3, 0x47, 0x01, 0x63, 0xc1, 0x8a, 0x38, 0x38,
	0xa6, 0x0e, 0x8e, 0x22, 0x26, 0x70, 0x06, 0xe5, 0x39, 0x56, 0xff, 0x1f, 0x50, 0x71, 0x91, 0x2e,
	0x6d, 0x8f, 0x85, 0x4e, 0xb8, 0xa1, 0xe2, 0x92, 0x6d, 0x9c, 0x80, 0x4d, 0xe4, 0xe1, 0x64, 0x8d,
	0x57, 0xd4, 0xc7, 0x82, 0x25, 0xdc, 0xd9, 0x96, 0xf9, 0x7b, 0xe6, 0x19, 0xec, 0x2e, 0x4a, 0xca,
	0xa8, 0x07, 0x15, 0x6f, 0xee, 0x6b, 0xc0, 0x00, 0x96, 0xe2, 0x66, 0x25, 0xfa, 0x09, 0x3b, 0x9c,
	0x90, 0xe8, 0x58, 0x68, 0x2d, 0x03, 0x58, 0x5f, 0xdc, 0xa2, 0xcb, 0xe6, 0x69, 0x94, 0xd5, 0x9a,
	0x62, 0x00, 0x4b, 0x75, 0x8b, 0xce, 0x9c, 0xc0, 0xe1, 0x2c, 0x21, 0x58, 0x90, 0x32, 0xaf, 0x4b,
	0xae, 0x52, 0xc2, 0x45, 0x9d, 0xde, 0x1c, 0x41, 0x7d, 0x1f, 0x9c, 0xc7, 0x2c, 0xe2, 0x24, 0x23,
	0x73, 0x49, 0xc8, 0xd6, 0x9f, 0x27, 0xdb, 0x07, 0x2f, 0xc8, 0x66, 0x70, 0x70, 0x4a, 0x44, 0xf9,
	0x88, 0xbf, 0x53, 0x21, 0xd8, 0x8e, 0x71, 0x40, 0x24, 0x97, 0xea, 0xca, 0x1a, 0xfd, 0x80, 0xea,
	0x8a, 0x86, 0x34, 0xff, 0x6e, 0xd5, 0xcd, 0x1b, 0xf3, 0x01, 0x40, 0xad, 0xce, 0x92, 0x2b, 0x20,
	0x1b, 0xb6, 0x7d, 0x2c, 0xb0, 0x06, 0x0c, 0xc5, 0xfa, 0x3a, 0xd5, 0xed, 0x72, 0x80, 0x76, 0xc5,
	0x93, 0xc4, 0x6d, 0x65, 0x5b, 0xfb, 0x64, 0x95, 0x92, 0x6c, 0x36, 0xf5, 0x58, 0x1a, 0x09, 0xad,
	0x9d, 0x4f, 0x65, 0x33, 0x7d, 0x56, 0x60, 0xbf, 0x4c, 0xbb, 0x20, 0xc9, 0x9a, 0x7a, 0x04, 0x3d,
	0x02, 0x88, 0xea, 0xb7, 0x8a, 0xfe, 0x56, 0x0d, 0x35, 0xc6, 0xa4, 0x5b, 0x87, 0x81, 0xc5, 0x9d,
	0x9a, 0x77, 0x2f, 0xaf, 0x4f, 0xad, 0x91, 0x39, 0x90, 0x7b, 0x59, 0x5e, 0x62, 0xe7, 0xda, 0x9b,
	0xfb, 0xb7, 0x47, 0x60, 0x8c, 0xee, 0x01, 0x44, 0xf5, 0x58, 0x76, 0xdd, 0x34, 0xe6, 0xbc, 0xeb,
	0xe6, 0x83, 0x84, 0x7f, 0x49, 0x37, 0xc3, 0x71, 0x93, 0x1b, 0x74, 0x03, 0x7b, 0xbb, 0xe1, 0xa1,
	0xdf, 0x55, 0xfa, 0x86, 0x15, 0xd1, 0xff, 0x1c, 0x82, 0x15, 0x1e, 0x86, 0xd2, 0x43, 0x1f, 0x7d,
	0xaf, 0x79, 0x38, 0xf9, 0x76, 0x5e, 0xf9, 0xa5, 0x97, 0x1d, 0xf9, 0xf8, 0xf7, 0x16, 0x00, 0x00,
	0xff, 0xff, 0x5b, 0x13, 0x09, 0x3e, 0xfd, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SubscriptionServiceClient is the client API for SubscriptionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SubscriptionServiceClient interface {
	CreateSubscription(ctx context.Context, in *CreateSubscriptionRequest, opts ...grpc.CallOption) (*CreateSubscriptionResponse, error)
	RemoveSubscription(ctx context.Context, in *RemoveSubscriptionRequest, opts ...grpc.CallOption) (*RemoveSubscriptionResponse, error)
	GetSubscriptions(ctx context.Context, in *GetSubscriptionsRequest, opts ...grpc.CallOption) (*GetSubscriptionsResponse, error)
}

type subscriptionServiceClient struct {
	cc *grpc.ClientConn
}

func NewSubscriptionServiceClient(cc *grpc.ClientConn) SubscriptionServiceClient {
	return &subscriptionServiceClient{cc}
}

func (c *subscriptionServiceClient) CreateSubscription(ctx context.Context, in *CreateSubscriptionRequest, opts ...grpc.CallOption) (*CreateSubscriptionResponse, error) {
	out := new(CreateSubscriptionResponse)
	err := c.cc.Invoke(ctx, "/discussproto.SubscriptionService/CreateSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *subscriptionServiceClient) RemoveSubscription(ctx context.Context, in *RemoveSubscriptionRequest, opts ...grpc.CallOption) (*RemoveSubscriptionResponse, error) {
	out := new(RemoveSubscriptionResponse)
	err := c.cc.Invoke(ctx, "/discussproto.SubscriptionService/RemoveSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *subscriptionServiceClient) GetSubscriptions(ctx context.Context, in *GetSubscriptionsRequest, opts ...grpc.CallOption) (*GetSubscriptionsResponse, error) {
	out := new(GetSubscriptionsResponse)
	err := c.cc.Invoke(ctx, "/discussproto.SubscriptionService/GetSubscriptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SubscriptionServiceServer is the server API for SubscriptionService service.
type SubscriptionServiceServer interface {
	CreateSubscription(context.Context, *CreateSubscriptionRequest) (*CreateSubscriptionResponse, error)
	RemoveSubscription(context.Context, *RemoveSubscriptionRequest) (*RemoveSubscriptionResponse, error)
	GetSubscriptions(context.Context, *GetSubscriptionsRequest) (*GetSubscriptionsResponse, error)
}

// UnimplementedSubscriptionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSubscriptionServiceServer struct {
}

func (*UnimplementedSubscriptionServiceServer) CreateSubscription(ctx context.Context, req *CreateSubscriptionRequest) (*CreateSubscriptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSubscription not implemented")
}
func (*UnimplementedSubscriptionServiceServer) RemoveSubscription(ctx context.Context, req *RemoveSubscriptionRequest) (*RemoveSubscriptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveSubscription not implemented")
}
func (*UnimplementedSubscriptionServiceServer) GetSubscriptions(ctx context.Context, req *GetSubscriptionsRequest) (*GetSubscriptionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSubscriptions not implemented")
}

func RegisterSubscriptionServiceServer(s *grpc.Server, srv SubscriptionServiceServer) {
	s.RegisterService(&_SubscriptionService_serviceDesc, srv)
}

func _SubscriptionService_CreateSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSubscriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubscriptionServiceServer).CreateSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/discussproto.SubscriptionService/CreateSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubscriptionServiceServer).CreateSubscription(ctx, req.(*CreateSubscriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SubscriptionService_RemoveSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveSubscriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubscriptionServiceServer).RemoveSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/discussproto.SubscriptionService/RemoveSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubscriptionServiceServer).RemoveSubscription(ctx, req.(*RemoveSubscriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SubscriptionService_GetSubscriptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubscriptionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubscriptionServiceServer).GetSubscriptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/discussproto.SubscriptionService/GetSubscriptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubscriptionServiceServer).GetSubscriptions(ctx, req.(*GetSubscriptionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SubscriptionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "discussproto.SubscriptionService",
	HandlerType: (*SubscriptionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSubscription",
			Handler:    _SubscriptionService_CreateSubscription_Handler,
		},
		{
			MethodName: "RemoveSubscription",
			Handler:    _SubscriptionService_RemoveSubscription_Handler,
		},
		{
			MethodName: "GetSubscriptions",
			Handler:    _SubscriptionService_GetSubscriptions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "subscription.proto",
}
