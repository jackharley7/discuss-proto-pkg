// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: invitation.proto

package discussproto

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Invitation) Validate() error {
	if this.Conversation != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Conversation); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Conversation", err)
		}
	}
	return nil
}
func (this *InvitationCount) Validate() error {
	return nil
}
func (this *CreateConversationMessage) Validate() error {
	if this.Conversation != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Conversation); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Conversation", err)
		}
	}
	if this.Invitation != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Invitation); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Invitation", err)
		}
	}
	if this.User != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.User); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("User", err)
		}
	}
	return nil
}
func (this *CreateConversationResponse) Validate() error {
	if this.Conversation != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Conversation); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Conversation", err)
		}
	}
	return nil
}
func (this *GetInvitationCountByUserIDMessage) Validate() error {
	return nil
}
func (this *GetInvitationCountByUserIDResponse) Validate() error {
	if this.Count != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Count); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Count", err)
		}
	}
	return nil
}
func (this *GetInvitationsByUserIDMessage) Validate() error {
	return nil
}
func (this *GetInvitationsByUserIDResponse) Validate() error {
	for _, item := range this.InvitationList {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("InvitationList", err)
			}
		}
	}
	return nil
}
func (this *GetInvitationByIDMessage) Validate() error {
	return nil
}
func (this *GetInvitationByIDResponse) Validate() error {
	if this.Invitation != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Invitation); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Invitation", err)
		}
	}
	return nil
}
func (this *RejectInvitationMessage) Validate() error {
	return nil
}
func (this *RejectInvitationResponse) Validate() error {
	return nil
}
func (this *AcceptInvitationMessage) Validate() error {
	return nil
}
func (this *AcceptInvitationResponse) Validate() error {
	return nil
}
func (this *LinkTwitterUserToConversationsRequest) Validate() error {
	return nil
}
func (this *LinkTwitterUserToConversationsResponse) Validate() error {
	return nil
}
