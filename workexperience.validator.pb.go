// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: workexperience.proto

package proto

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *WorkExperience) Validate() error {
	if this.Title == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Title", fmt.Errorf(`value '%v' must not be an empty string`, this.Title))
	}
	if this.Organisation == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Organisation", fmt.Errorf(`value '%v' must not be an empty string`, this.Organisation))
	}
	if !(this.StartYear > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("StartYear", fmt.Errorf(`value '%v' must be greater than '0'`, this.StartYear))
	}
	if !(this.EndYear > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("EndYear", fmt.Errorf(`value '%v' must be greater than '0'`, this.EndYear))
	}
	return nil
}
func (this *CreateWorkExperienceRequest) Validate() error {
	if this.WorkExperience != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.WorkExperience); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("WorkExperience", err)
		}
	}
	return nil
}
func (this *CreateWorkExperienceResponse) Validate() error {
	if this.WorkExperience != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.WorkExperience); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("WorkExperience", err)
		}
	}
	return nil
}
func (this *UpdateWorkExperienceRequest) Validate() error {
	if this.WorkExperience != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.WorkExperience); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("WorkExperience", err)
		}
	}
	return nil
}
func (this *UpdateWorkExperienceResponse) Validate() error {
	if this.WorkExperience != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.WorkExperience); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("WorkExperience", err)
		}
	}
	return nil
}
func (this *DeleteWorkExperienceRequest) Validate() error {
	return nil
}
func (this *DeleteWorkExperienceResponse) Validate() error {
	return nil
}
